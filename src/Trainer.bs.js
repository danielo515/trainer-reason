// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");

function exercise(param) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "name",
                param[/* name */0]
              ],
              /* :: */[
                /* tuple */[
                  "rest",
                  param[/* rest */2]
                ],
                /* :: */[
                  /* tuple */[
                    "series",
                    Json_encode.list((function (prim) {
                            return prim;
                          }), param[/* series */1])
                  ],
                  /* :: */[
                    /* tuple */[
                      "completed",
                      param[/* completed */3]
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

function session(param) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "name",
                param[/* name */0]
              ],
              /* :: */[
                /* tuple */[
                  "exercises",
                  Json_encode.list(exercise, param[/* exercises */1])
                ],
                /* [] */0
              ]
            ]);
}

function table(param) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "name",
                param[/* name */1]
              ],
              /* :: */[
                /* tuple */[
                  "completed",
                  param[/* completed */2]
                ],
                /* :: */[
                  /* tuple */[
                    "sessions",
                    Json_encode.list(session, param[/* sessions */0])
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

var Encode = /* module */[
  /* exercise */exercise,
  /* session */session,
  /* table */table
];

function exercise$1(str) {
  return /* record */[
          /* name */Json_decode.field("name", Json_decode.string, str),
          /* series */Json_decode.field("series", (function (param) {
                  return Json_decode.list(Json_decode.$$int, param);
                }), str),
          /* rest */Json_decode.field("rest", Json_decode.$$int, str),
          /* completed */Json_decode.field("completed", Json_decode.$$int, str)
        ];
}

function session$1(str) {
  return /* record */[
          /* name */Json_decode.field("name", Json_decode.string, str),
          /* exercises */Json_decode.field("exercises", (function (param) {
                  return Json_decode.list(exercise$1, param);
                }), str)
        ];
}

function table$1(str) {
  return /* record */[
          /* sessions */Json_decode.field("sessions", (function (param) {
                  return Json_decode.list(session$1, param);
                }), str),
          /* name */Json_decode.field("name", Json_decode.string, str),
          /* completed */Json_decode.field("completed", Json_decode.$$int, str)
        ];
}

var Decode = /* module */[
  /* exercise */exercise$1,
  /* session */session$1,
  /* table */table$1
];

function isCompleted(exercise) {
  return List.length(exercise[/* series */1]) === exercise[/* completed */3];
}

function newTable(name) {
  return /* record */[
          /* sessions : [] */0,
          /* name */name,
          /* completed */0
        ];
}

function newSession(name) {
  return /* record */[
          /* name */name,
          /* exercises : [] */0
        ];
}

function newExercise(name, series, $staropt$star, _) {
  var rest = $staropt$star !== undefined ? $staropt$star : 30;
  return /* record */[
          /* name */name,
          /* series */series,
          /* rest */rest,
          /* completed */0
        ];
}

function serieCompleted(ex) {
  return /* record */[
          /* name */ex[/* name */0],
          /* series */ex[/* series */1],
          /* rest */ex[/* rest */2],
          /* completed */ex[/* completed */3] + 1 | 0
        ];
}

function insertExercise(session, exercise) {
  return /* record */[
          /* name */session[/* name */0],
          /* exercises : :: */[
            exercise,
            session[/* exercises */1]
          ]
        ];
}

function addToSession(table, sessionName, exercise) {
  return /* record */[
          /* sessions */List.map((function (session) {
                  var match = session[/* name */0] === sessionName;
                  if (match) {
                    return insertExercise(session, exercise);
                  } else {
                    return session;
                  }
                }), table[/* sessions */0]),
          /* name */table[/* name */1],
          /* completed */table[/* completed */2]
        ];
}

function addSession(table, session) {
  return /* record */[
          /* sessions : :: */[
            session,
            table[/* sessions */0]
          ],
          /* name */table[/* name */1],
          /* completed */table[/* completed */2]
        ];
}

exports.Encode = Encode;
exports.Decode = Decode;
exports.isCompleted = isCompleted;
exports.newTable = newTable;
exports.newSession = newSession;
exports.newExercise = newExercise;
exports.serieCompleted = serieCompleted;
exports.insertExercise = insertExercise;
exports.addToSession = addToSession;
exports.addSession = addSession;
/* Json_encode Not a pure module */
